<launch>

    <!-- 设置launch文件的参数 -->
    <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>
    <arg name="world_name" value="$(find mycar)/world/house1.world"/>

    <!-- 运行gazebo仿真环境
    <arg name="world_name" value="$(arg world_name)" /> -->
    <include file="$(find mycar)/launch/empty_world.launch">
        <arg name="debug" value="$(arg debug)" />
        <arg name="gui" value="$(arg gui)" />
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="$(arg use_sim_time)"/>
        <arg name="headless" value="$(arg headless)"/>
        <arg name="world_name" value="$(arg world_name)"/>
    </include>
    <!-- 加载机器人模型描述参数  -->
    <param name="robot_description" command="$(find xacro)/xacro  $(find mycar)/urdf/xacro_gazebo/mcar_withlidar.xacro" />


    <!-- 运行robot_state_publisher节点，发布tf  -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"  output="screen" >
        <param name="publish_frequency" type="double" value="50.0" />
    </node>

    <!-- 在gazebo中加载机器人模型 -->
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
          args="-urdf -model / -param robot_description"/>


    <node name="slam_gmapping" pkg="gmapping" type="slam_gmapping" args="scan:=/scan  _base_frame:=base_link  " >
        <!--param name="map_update_interval" value="0.01"/-->
        <param name="delta" value="0.15"/>
    </node>


    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find mycar)/urdf.rviz" required="true" />
    <node name="frontier" pkg="my_" type="slam_gmapping" args="scan:=/scan  _base_frame:=base_link  " >
        <!--param name="map_update_interval" value="0.01"/-->
        <param name="delta" value="0.15"/>
    </node>

    <node name="my_frontier" pkg="my_frontier_exploration" type="frontier"  />

    <!-- run move_base using astar -->
    <!-- node name="move_base" pkg="my_move_base" type="move_base_astar"  /-->


    <!-- run move_base using rrt -->
    <!-- node name="move_base" pkg="my_move_base" type="move_base_rrt"  /-->

    <!-- run move_base using rrt* -->
    <node name="move_base" pkg="my_move_base" type="move_base_rrt_star"  />


    <!-- run move_base using hybrid astar -->
    <!-- node name="move_base" pkg="my_move_base" type="move_base_hybri"  /-->

</launch>
